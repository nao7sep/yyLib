using yyLib;

namespace yyGptLibConsole
{
    internal class Program
    {
#pragma warning disable IDE0060 // Remove unused parameter
        static void Main (string [] args)
#pragma warning restore IDE0060
        {
            try
            {
                // Tester1.Test ();
                // Tester2.Test ();

                // Tester3.Test (100); // Do not run this test casually as it might cost a lot of money.

                /* Tester3.GeneratePage (@"C:\Repositories\Resources\Static\Beautiful People and Places",
                    "This page contains 100 images generated by DALL-E 3 using the following code in February 2024 for testing purposes." +
                    Environment.NewLine +
                    Environment.NewLine +
                    "https://github.com/nao7sep/yyGptLib/blob/main/yyGptLibConsole/Tester3.cs"); */

                /* string xInvariantLanguagePageFilePath = @"C:\Repositories\Resources\Static\Beautiful People and Places\Beautiful People and Places.md";

                // ChatGPT seems confident in English, Spanish, French, German, Italian, Portuguese, Dutch, Russian, Chinese, Japanese, and Korean.
                // It also says: However, my proficiency varies across languages, with the highest level of fluency in English.

                var xLanguages = new []
                {
                    // new { Code = "en", Name = "English" },
                    new { Code = "es", Name = "Spanish" },
                    new { Code = "fr", Name = "French" },
                    new { Code = "de", Name = "German" },
                    new { Code = "it", Name = "Italian" },
                    new { Code = "pt", Name = "Portuguese" },
                    new { Code = "nl", Name = "Dutch" },
                    new { Code = "ru", Name = "Russian" },
                    new { Code = "zh", Name = "Chinese" },
                    new { Code = "ja", Name = "Japanese" },
                    new { Code = "ko", Name = "Korean" }
                };

                Parallel.ForEach (xLanguages, new ParallelOptions
                {
                    // Let's leave some (redundant) information for my own information.

                    // When I first tried this without parallel processing, it took me about 12 minutes (in February 2024) for each language.
                    // After a few languages, I thought of using Parallel.ForEach, stopped the execution, implemented it and that's how it all began.

                    // Maybe, I was still considered a new user by OpenAI and was not considered credible,
                    //     but my rate limits were relatively easy to reach and I often got the too-many-requests error.
                    // So, I set MaxDegreeOfParallelism to 5, hoping to finish the 10 languages in 2 iterations, and failed again.

                    // In the end, I ended up implementing a capability to automatically retry when the error above occurred.
                    // Now the code, upon failure, waits for 3 seconds, then 6 seconds, then 9 seconds and so on, adding 3 seconds each time.

                    // As Tester3.cs is merely test code, it continues retrying until the stack overflows or my bank account is empty.
                    // In production code, there must be a limit for the number of retries and also a cancellation mechanism.
                },
                x => Tester3.TranslatePage (xInvariantLanguagePageFilePath, x.Code, x.Name)); */

                // Results are in: Resources/Misc/yyGptLibConsole_Tester4
                Tester4.SaveJsonStrings ();
            }

            catch (Exception xException)
            {
                yySimpleLogger.Default.TryWriteException (xException);
                Console.WriteLine (xException.ToString ());
            }
        }
    }
}
